{"ast":null,"code":"var _jsxFileName = \"/Users/robert/Kodilla/product_personalizer_react/src/components/Products/Product/ProductForm/OptionColor/OptionColor.js\";\nimport styles from './OptionColor.module.scss';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OptionColor = props => {\n  const prepareColorClassName = color => {\n    return styles[\"color\" + color[0].toUpperCase() + color.substr(1).toLowerCase()];\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.colors,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: styles.optionLabel,\n      children: \"Colors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.choices,\n      children: props.data.colors.map(color => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: clsx(prepareColorClassName(color), props.currentColor === color && styles.active),\n          onClick: () => props.setCurrentColor(color)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 7\n        }, this)\n      }, color, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 6\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n};\n\n_c = OptionColor;\nOptionColor.propTypes = {\n  currentColor: PropTypes.string,\n  data: PropTypes.object,\n  setCurrentColor: PropTypes.func,\n  prepareColorClassName: PropTypes.func\n};\nexport default OptionColor;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionColor\");","map":{"version":3,"sources":["/Users/robert/Kodilla/product_personalizer_react/src/components/Products/Product/ProductForm/OptionColor/OptionColor.js"],"names":["styles","clsx","PropTypes","OptionColor","props","prepareColorClassName","color","toUpperCase","substr","toLowerCase","colors","optionLabel","choices","data","map","currentColor","active","setCurrentColor","propTypes","string","object","func"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAGC,KAAK,IAAI;AAE5B,QAAMC,qBAAqB,GAAIC,KAAD,IAAW;AACxC,WAAON,MAAM,CACZ,UAAUM,KAAK,CAAC,CAAD,CAAL,CAASC,WAAT,EAAV,GAAmCD,KAAK,CAACE,MAAN,CAAa,CAAb,EAAgBC,WAAhB,EADvB,CAAb;AAGA,GAJD;;AAMA,sBACC;AAAK,IAAA,SAAS,EAAET,MAAM,CAACU,MAAvB;AAAA,4BACC;AAAI,MAAA,SAAS,EAAEV,MAAM,CAACW,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAI,MAAA,SAAS,EAAEX,MAAM,CAACY,OAAtB;AAAA,gBACER,KAAK,CAACS,IAAN,CAAWH,MAAX,CAAkBI,GAAlB,CAAsBR,KAAK,iBAC3B;AAAA,+BACC;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAEL,IAAI,CAACI,qBAAqB,CAACC,KAAD,CAAtB,EAA+BF,KAAK,CAACW,YAAN,KAAuBT,KAAvB,IAAgCN,MAAM,CAACgB,MAAtE,CAArC;AAAoH,UAAA,OAAO,EAAE,MAAMZ,KAAK,CAACa,eAAN,CAAsBX,KAAtB;AAAnI;AAAA;AAAA;AAAA;AAAA;AADD,SAASA,KAAT;AAAA;AAAA;AAAA;AAAA,cADA;AADF;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAYA,CApBD;;KAAMH,W;AAsBNA,WAAW,CAACe,SAAZ,GAAwB;AACvBH,EAAAA,YAAY,EAAEb,SAAS,CAACiB,MADD;AAEvBN,EAAAA,IAAI,EAAEX,SAAS,CAACkB,MAFO;AAGvBH,EAAAA,eAAe,EAAEf,SAAS,CAACmB,IAHJ;AAIvBhB,EAAAA,qBAAqB,EAAEH,SAAS,CAACmB;AAJV,CAAxB;AAOA,eAAelB,WAAf","sourcesContent":["import styles from './OptionColor.module.scss';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\n\nconst OptionColor = props => {\n\n\tconst prepareColorClassName = (color) => {\n\t\treturn styles[\n\t\t\t\"color\" + color[0].toUpperCase() + color.substr(1).toLowerCase()\n\t\t];\n\t};\n\n\treturn (\n\t\t<div className={styles.colors}>\n\t\t\t<h3 className={styles.optionLabel}>Colors</h3>\n\t\t\t<ul className={styles.choices}>\n\t\t\t\t{props.data.colors.map(color => (\n\t\t\t\t\t<li key={color}>\n\t\t\t\t\t\t<button type=\"button\" className={clsx(prepareColorClassName(color), props.currentColor === color && styles.active)} onClick={() => props.setCurrentColor(color)} />\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</div>\n\t);\n};\n\nOptionColor.propTypes = {\n\tcurrentColor: PropTypes.string,\n\tdata: PropTypes.object,\n\tsetCurrentColor: PropTypes.func,\n\tprepareColorClassName: PropTypes.func\n};\n\nexport default OptionColor;"]},"metadata":{},"sourceType":"module"}